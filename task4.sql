--USE Lesson4;

IF OBJECT_ID('STAFF_ALLOCATION') IS NOT NULL
DROP TABLE STAFF_ALLOCATION;

IF OBJECT_ID('ATTENDANCE') IS NOT NULL
DROP TABLE ATTENDANCE;

IF OBJECT_ID('STUDENT') IS NOT NULL
DROP TABLE STUDENT;

IF OBJECT_ID('STAFF') IS NOT NULL
DROP TABLE STAFF;

IF OBJECT_ID('SEMINAR') IS NOT NULL
DROP TABLE SEMINAR;

GO

CREATE TABLE STUDENT(
    STUID       INT
,   FULLNAME    NVARCHAR(50)
,   GENDER      NVARCHAR(1)
,   PRIMARY KEY (STUID)
);

CREATE TABLE STAFF(
    STFID       INT
,   FULLNAME    NVARCHAR(50)
,   GENDER      NVARCHAR(1)
,   PRIMARY KEY (STFID)
);

CREATE TABLE SEMINAR(
    SEMID       INT
,   TITLE       NVARCHAR(50)
,   SDATE       DATETIME
,   PRIMARY KEY (SEMID)
);

CREATE TABLE STAFF_ALLOCATION(
    SEMID       INT
,   STFID       INT
,   PRIMARY KEY (SEMID, STFID)
,   FOREIGN KEY (SEMID) REFERENCES SEMINAR(SEMID)
,   FOREIGN KEY (STFID) REFERENCES STAFF(STFID)
);

CREATE TABLE ATTENDANCE(
    STUID       INT
,   SEMID       INT
,   SCORE       INT
,   PRIMARY KEY (STUID, SEMID)
,   FOREIGN KEY (STUID) REFERENCES STUDENT(STUID)
,   FOREIGN KEY (SEMID) REFERENCES SEMINAR(SEMID)
);

GO
INSERT INTO STUDENT (STUID, FULLNAME, GENDER) VALUES
(2719000, 'Emma Jay', 'F'),
(9091431, 'Dave Smith', 'M'),
(9198122, 'Jane Jones', 'F'),
(8184399, 'Mike Toll', 'M');

INSERT INTO STAFF (STFID, FULLNAME, GENDER) VALUES
(131, 'Karen Lovell', 'F'),
(232, 'Denise Randle', 'F'),
(455, 'Sean Mellerick', 'F'),
(217, 'Anna Langely', 'F');

INSERT INTO SEMINAR (SEMID, TITLE, SDATE) VALUES
(401, 'Database Security', '13-JAN-2020'),
(402, 'Agile Programming', '14-JAN-2020'),
(406, 'Business Intelligence', '13-JAN-2020'),
(409, 'Social Media Analytics', '14-JAN-2020');

INSERT INTO STAFF_ALLOCATION (SEMID, STFID) VALUES
(401, 131),
(401, 455),
(402, 131),
(402, 217),
(406, 455);

INSERT INTO ATTENDANCE(STUID, SEMID, SCORE) VALUES
(9091431, 401, 8),
(9198122, 401, 5),
(8184399, 401, 7),
(9198122, 402, 6),
(9091431, 402, 7),
(9198122, 406, 4);



--1
SELECT FULLNAME, GENDER
FROM STUDENT
UNION
SELECT FULLNAME, GENDER
FROM STAFF
ORDER BY FULLNAME ASC, GENDER ASC;

--2
SELECT *
FROM ATTENDANCE
WHERE SCORE < 
(SELECT AVG(SCORE)
FROM ATTENDANCE);

--3
SELECT stf.FULLNAME, stf_al.SEMID
FROM STAFF stf
LEFT OUTER JOIN STAFF_ALLOCATION stf_al
ON stf.STFID = stf_al.STFID;

--4
SELECT stu.FULLNAME, sem.TITLE, atd.SCORE
FROM ATTENDANCE atd
INNER JOIN SEMINAR sem
ON atd.SEMID = sem.SEMID
RIGHT OUTER JOIN STUDENT stu
ON atd.STUID = stu.STUID;




